---

- name: Fail for Missing Transfer Method
  fail:
    msg: "This role requires transfer_method to be set and non empty. See the README"
  when: transfer_method is not defined or transfer_method == ''

- name: Fail for Missing Red Hat Network Username
  fail:
    msg: This role requires rhn_username to be set and non empty."
  when: transfer_method == 'csp-to-host' and (rhn_username is not defined or rhn_username == '')

- name: Fail for Missing Red Hat Network Password
  fail:
    msg: "This role requires rhn_password to be set and non empty."
  when: transfer_method == 'csp-to-host' and (rhn_password is not defined or rhn_password == '')

- name: Set JBoss EAP Download Facts
  set_fact:
    jboss_eap_artifact_url: "{{ jboss_eap_artifact_source }}"
    jboss_eap_artifact_dl_dest: "{{ jboss_eap_artifacts_dl_dest_dir }}/{{ jboss_eap_artifact_name }}"

- name: Set JBoss EAP Service Directories Facts
  set_fact:
    jboss_eap_home: "{{ jboss_eap_library_dest_dir }}/{{ jboss_eap_home_dir_name }}"

- name: Create JBoss EAP Group
  group:
    name: "{{ jboss_eap_group }}"
    system: yes
    state: present
    gid: "400"

- name: Create JBoss EAP User
  user:
    name: "{{ jboss_eap_user }}"
    comment: "JBoss EAP User"
    uid: "400"
    group: "{{ jboss_eap_group }}"
    home: "{{ jboss_eap_library_dest_dir }}"
    shell: "/bin/bash"


#### Defensive Programming To Check If EAP Is Already Installed
- name: Check Existence of Libraries
  become: true
  stat:
    path: "{{ jboss_eap_library_dest_dir + '/' + jboss_eap_home_dir_name + '/version.txt'}}"
  register: jboss_eap_exists


- name: Async Download JBoss EAP by URL (HTTP/HTTPS/FTP)
  get_url:
    url: "{{ jboss_eap_artifact_url }}"
    dest: "{{ jboss_eap_artifact_dl_dest }}"
    url_username: "{{ url_username | default(None) }}"
    url_password: "{{ url_password | default(None) }}"
  async: 7200
  poll: 0
  register: url_jboss_eap_download
  when: transfer_method == 'url' and jboss_eap_exists.stat.exists == false

- name: Check On JBoss EAP Download Completion (URL)
  async_status: jid={{ url_jboss_eap_download.ansible_job_id }}
  register: job_result1
  until: job_result1.finished
  retries: 600
  delay: 10
  when: transfer_method == 'url' and jboss_eap_exists.stat.exists == false

- name: Async Download JBoss EAP from Red Hat Customer Portal
  redhat_csp_download:
    url: "{{ jboss_eap_artifact_url }}"
    dest: "{{ jboss_eap_artifact_dl_dest }}"
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"
  async: 7200
  poll: 0
  register: csp_jboss_eap_download
  tags:
    - jboss_eap
  when: transfer_method == 'csp-to-host' and jboss_eap_exists.stat.exists == false

- name: Check On JBoss EAP Download Completion (CSP)
  async_status: jid={{ csp_jboss_eap_download.ansible_job_id }}
  register: job_result1
  until: job_result1.finished
  retries: 600
  delay: 10
  tags:
    - jboss_eap
  when: transfer_method == 'csp-to-host' and jboss_eap_exists.stat.exists == false


- name: Copy JBoss EAP
  copy:
    src: "{{ jboss_eap_artifact_name }}"
    dest: "{{ jboss_eap_artifact_dl_dest }}"
  when: transfer_method == 'copy-from-controller' and jboss_eap_exists.stat.exists == false

- name: Extract JBoss EAP Libraries
  become: true
  unarchive:
    src: "{{ jboss_eap_artifact_dl_dest }}"
    dest: "{{ jboss_eap_library_dest_dir }}"
    creates: "{{ jboss_eap_home_dir_name }}"
    copy: no
    owner: "{{ jboss_eap_user }}"
    group: "{{ jboss_eap_group }}"
  when: jboss_eap_exists.stat.exists == false

- name: Patch
  include_tasks: apply_patch.yml
  when: jboss_eap_apply_patch|bool

- name: Check if Backup Standalone Directory Exists
  stat:
    path: "{{ jboss_eap_home }}/{{ jboss_eap_standalone_backup_dir_name }}"
  register: standalone_backup_dir

- name: Create Backup Standalone Directory
  command: "cp -r {{ jboss_eap_home }}/{{ jboss_eap_default_mode }} {{ jboss_eap_home }}/{{ jboss_eap_standalone_backup_dir_name }}"
  when: not standalone_backup_dir.stat.exists

- name: Change Permissions on Standalone Backup Directory
  file:
    state: directory
    recurse: yes
    path: "{{ jboss_eap_home }}/{{ jboss_eap_standalone_backup_dir_name }}"
    owner: "{{ jboss_eap_user }}"
    group: "{{ jboss_eap_group }}"

- name: Validate Instance Configuration
  fail:
    msg: Invalid JBoss instance configuration
  when: jboss_instances is undefined or jboss_instances|length == 0

- name: Configure Instances
  include_tasks: jboss_instance.yml
  with_items: "{{ jboss_instances }}"
  loop_control:
    loop_var: instance
